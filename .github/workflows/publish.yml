name: Publish Docker images

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * TUE"
  workflow_dispatch:

concurrency: ${{ github.workflow }}

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        mod: ["transmission-gluetun-port-update"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Get current time
        id: current-time
        uses: josStorer/get-current-time@v2
        with:
          format: YYYYMMDDhhmmss

      - name: Get latest binary release
        id: binary
        uses: pozetroninc/github-action-get-latest-release@v0.8.0
        with:
          repository: Michsior14/transmission-gluetun-port-update
          excludes: prerelease, draft
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: michaukrieg
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get metadata for image
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            michaukrieg/docker-mods
            ghcr.io/${{ github.repository }}
          tags: |
            ${{ matrix.mod }}
            ${{ matrix.mod }}-${{ steps.binary.outputs.release }}
            ${{ matrix.mod }}-${{ steps.current-time.outputs.formattedTime }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: ${{ matrix.mod }}/Dockerfile
          context: ${{ matrix.mod }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          build-args: |
            MOD_VERSION=${{ steps.binary.outputs.release }}
          platforms: linux/amd64,linux/arm64/v8
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: michaukrieg
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
          repository: michaukrieg/docker-mods
          short-description: ${{ github.event.repository.description }}
